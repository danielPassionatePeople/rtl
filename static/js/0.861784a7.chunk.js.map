{"version":3,"sources":["components/H1/index.js","components/Card/index.js","styles/media.js","global/shows/selectors.js","components/Hero/index.js","components/Carousel/index.js","components/Label/index.js","containers/DetailsPage/CarouselItem/index.js","containers/DetailsPage/component.js","global/episodes/selectors.js","containers/DetailsPage/selectors.js","router/selectors.js","containers/DetailsPage/index.js"],"names":["styled","h1","_templateObject","div","SIZES","fourK","fullHD","bigDesktop","desktop","tablet","tabletPortrait","phone","Object","keys","reduce","accumulator","label","emSize","css","apply","arguments","__webpack_require__","d","__webpack_exports__","selectShows","selectIsShowsLoading","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShowsDomain","_ref","shows","createSelector","_ref2","data","_ref3","isLoading","Wrapper","Overlay","_templateObject2","image","concat","ImageWrapper","_templateObject3","Hero","src","react_default","a","createElement","slidesToShow","settings","dots","infinite","useCSS","slidesToScroll","initialSlide","responsive","breakpoint","speed","touchThreshold","swipe","isMobile","isTablet","Carousel_templateObject","Carousel","CarouselItem","carouselItem","onClick","Carousel_Wrapper","className","lib_default","map","item","key","Label_templateObject","StyledCard","Card","CarouselItem_templateObject","Cover","img","CarouselItem_templateObject2","Title","H1","CarouselItem_templateObject3","react","id","path","name","Wrap","component_templateObject","Grid","component_templateObject2","component_templateObject3","Metadata","_templateObject4","InnerWrap","_templateObject5","CarouselWrap","_templateObject6","LabelsSection","_templateObject7","Description","article","_templateObject8","StyledLink","Link","_templateObject9","DetailsComponent","genres","episodes","onClickEpisode","isEpisode","match","components_Hero","getImage","component_Title","dangerouslySetInnerHTML","__html","summary","isEmpty","genre","Label","components_Carousel","to","DETAILS_PAGE","params","selectEpisodesDomain","selectEpisodes","selectIsEpisodesLoading","getGenres","prop","findItemInListById","list","find","String","selectSelectedShow","state","props","routeParams","episodeId","selectGenres","Array","isArray","DetailsPage_selectors","createStructuredSelector","isShowsLoading","isEpisodesLoading","dispatchers","mapDispatchers","loadEpisodes","compose","mapProps","esm_extends","objectSpread","connect","detailsConnector","withHandlers","browserHistory","push","EPISODE_PAGE","lifecycle","componentDidMount","this","branch","_ref4","renderComponent","Loader"],"mappings":"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","file":"static/js/0.861784a7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.h1`\n  color: white;\n  font-size: 24px;\n  font-family: 'Roboto', sans-serif;\n  text-align: left;\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  min-width: 152px;\n`;\n","import { css } from 'styled-components';\n\nexport const SIZES = {\n  fourK: 2560,\n  fullHD: 1920,\n  bigDesktop: 1440,\n  desktop: 1200,\n  tablet: 1024,\n  tabletPortrait: 768,\n  phone: 425,\n};\n\nexport default Object.keys(SIZES).reduce((accumulator, label) => {\n  const emSize = SIZES[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (min-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n","import { createSelector } from 'reselect';\n\nexport const selectShowsDomain = ({ shows }) => shows;\nexport const selectShows = createSelector(selectShowsDomain, ({ data }) => data);\nexport const selectIsShowsLoading = createSelector(selectShowsDomain, ({ isLoading }) => isLoading);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Hero = ({ src }) => (\n  <Wrapper>\n    <Overlay image={src} />\n    <ImageWrapper image={src} />\n  </Wrapper>\n);\n\nHero.propTypes = {\n  src: PropTypes.string,\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst Overlay = styled.div`\n  height: 100%;\n  width: 100%;\n  filter: blur(20px);\n  position: absolute;\n  background-image: ${({ image }) => `url(\"${image}\")`};\n  background-repeat: no-repeat;\n  background-size: 100% 359px;\n  z-index: 1;\n`;\n\nconst ImageWrapper = styled.div`\n  height: 384px;\n  width: 100%;\n  display: flex;\n  position: relative;\n  background-image: ${({ image }) => `url(\"${image}\")`};\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  align-content: flex-end;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: linear-gradient(\n      to bottom,\n      rgba(255, 255, 255, 0) 56%,\n      rgba(0, 0, 0, 0.78) 99%,\n      rgba(0, 0, 0, 0.8) 100%\n    );\n  }\n  z-index: 5;\n`;\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nimport { isMobile, isTablet } from 'react-device-detect';\nimport { SIZES } from '../../styles/media';\n\nconst Carousel = ({ data, carouselItem: CarouselItem, onClick }) => (\n  <Wrapper className=\"CarouselSliderWrapper\">\n    <Slider {...settings}>\n      {data.map((item, key) => (\n        <CarouselItem key={key} item={item} onClick={() => onClick(item)} />\n      ))}\n    </Slider>\n  </Wrapper>\n);\n\nconst slidesToShow = [\n  1,\n  3, // phone\n  4, // tablet\n  5, // laptop\n  6, // big desktop\n];\n\nconst settings = {\n  dots: false,\n  infinite: true,\n  slidesToShow: slidesToShow[4],\n  useCSS: 1,\n  slidesToScroll: 1,\n  initialSlide: 0,\n  responsive: [\n    { breakpoint: SIZES.phone, settings: { slidesToShow: slidesToShow[0] } },\n    { breakpoint: SIZES.tablet, settings: { slidesToShow: slidesToShow[1] } },\n    { breakpoint: SIZES.desktop, settings: { slidesToShow: slidesToShow[2] } },\n    { breakpoint: SIZES.bigDesktop, settings: { slidesToShow: slidesToShow[3] } },\n  ],\n  speed: 200,\n  touchThreshold: 20,\n  swipe: isMobile || isTablet,\n};\n\nCarousel.propTypes = {\n  data: PropTypes.array,\n  carouselItem: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nconst Wrapper = styled.div`\n  max-width: 90%;\n  margin: 0 auto;\n  .slick-slide {\n    &:focus {\n      outline: none;\n    }\n    div {\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n`;\n\nexport default Carousel;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  padding: 4px 10px;\n  border: 1px solid #737373;\n  border-radius: 2px;\n  margin: 0 5px;\n  color: #737373;\n  font-size: 14px;\n`;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { path } from 'ramda';\nimport Card from '../../../components/Card';\nimport H1 from '../../../components/H1';\n\nconst CarouselItem = ({ item, onClick }) => (\n  <Fragment>\n    {item && (\n      <StyledCard key={item.id} onClick={onClick}>\n        <Cover src={path(['image', 'original'], item)} />\n        <Title>{item.name}</Title>\n      </StyledCard>\n    )}\n  </Fragment>\n);\n\nCarouselItem.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n};\nconst StyledCard = styled(Card)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 10px;\n  text-align: center;\n  height: 250px;\n  position: relative;\n`;\n\nconst Cover = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  height: 100%;\n  background-color: #485461;\n  background-image: linear-gradient(315deg, #485461 0%, #28313b 74%);\n`;\n\nconst Title = styled(H1)`\n  font-size: 20px;\n  max-width: 160px; /* TODO This can be done properly */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  position: absolute;\n  bottom: 5px;\n  left: 10px;\n`;\n\nexport default CarouselItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport isEmpty from 'lodash/isEmpty';\nimport { Link } from 'react-router-dom';\nimport { path } from 'ramda';\nimport Hero from '../../components/Hero';\nimport Carousel from '../../components/Carousel';\nimport Label from '../../components/Label';\nimport CarouselItem from './CarouselItem';\nimport { DETAILS_PAGE } from '../../router/constants';\nimport H1 from '../../components/H1';\n\nconst getImage = (item) => path(['image', 'original'], item);\n\nconst DetailsComponent = ({ item, genres, episodes, onClickEpisode, isEpisode, match }) => (\n  <Wrap>\n    <Grid>\n      {item && <Hero src={getImage(item)} />}\n      <Metadata>\n        <InnerWrap>\n          <Title>{item.name}</Title>\n          <Description dangerouslySetInnerHTML={{ __html: item.summary }} />\n          {!isEmpty(genres) && (\n            <LabelsSection>\n              {genres.map((genre) => (\n                <Label key={genre}>{genre}</Label>\n              ))}\n            </LabelsSection>\n          )}\n          {!isEpisode &&\n            episodes && (\n              <CarouselWrap>\n                <Carousel data={episodes} carouselItem={CarouselItem} onClick={onClickEpisode} />\n              </CarouselWrap>\n            )}\n          {isEpisode && <StyledLink to={`${DETAILS_PAGE}/${match.params.id}`}>Go back to the show</StyledLink>}\n        </InnerWrap>\n      </Metadata>\n    </Grid>\n  </Wrap>\n);\n\nDetailsComponent.propTypes = {\n  item: PropTypes.object,\n  genres: PropTypes.array,\n  episodes: PropTypes.array,\n  onClickEpisode: PropTypes.func,\n  isEpisode: PropTypes.bool,\n  match: PropTypes.object,\n};\n\nconst Wrap = styled.div`\n  display: block;\n  position: relative;\n  height: 100%;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled(H1)`\n  margin: 10px 0;\n`;\n\nconst Metadata = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1024px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\nconst InnerWrap = styled.div`\n  padding: 20px;\n`;\n\nconst CarouselWrap = styled.div`\n  margin-top: 30px;\n  max-width: 90vw;\n`;\n\nconst LabelsSection = styled.div`\n  display: flex;\n  margin: 15px 0;\n`;\n\nconst Description = styled.article`\n  font-size: 14px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n`;\n\nexport default DetailsComponent;\n","import { createSelector } from 'reselect';\n\nexport const selectEpisodesDomain = ({ episodes }) => episodes;\nexport const selectEpisodes = createSelector(selectEpisodesDomain, ({ data }) => data);\nexport const selectIsEpisodesLoading = createSelector(selectEpisodesDomain, ({ isLoading }) => isLoading);\n","import { createSelector, createStructuredSelector } from 'reselect';\nimport { prop } from 'ramda';\nimport { selectShows, selectIsShowsLoading } from '../../global/shows/selectors';\nimport { makeSelectRouteParams } from '../../router/selectors';\nimport { selectEpisodes, selectIsEpisodesLoading } from '../../global/episodes/selectors';\n\nconst getGenres = prop('genres');\n\nconst findItemInListById = (id, list) => list && list.find((item) => String(item.id) === id);\n\nconst selectSelectedShow = createSelector(\n  selectShows,\n  selectEpisodes,\n  makeSelectRouteParams(),\n  (shows, episodes, routeParams) => {\n    if (routeParams.episodeId) {\n      return episodes ? findItemInListById(routeParams.episodeId, episodes) : {};\n    }\n    return findItemInListById(routeParams.id, shows);\n  }\n);\n\nconst selectGenres = createSelector(selectSelectedShow, (item) => {\n  const genres = getGenres(item);\n  return Array.isArray(genres) ? genres : null;\n});\n\nexport default createStructuredSelector({\n  item: selectSelectedShow,\n  genres: selectGenres,\n  episodes: selectEpisodes,\n  isShowsLoading: selectIsShowsLoading,\n  isEpisodesLoading: selectIsEpisodesLoading,\n});\n","import { path } from 'ramda';\n\nexport const makeSelectRouteParams = () => (state, props) => (props ? path(['match', 'params'], props) : {});\n","import { connect } from 'react-redux';\nimport { compose, lifecycle, withHandlers, branch, renderComponent, mapProps } from 'recompose';\n\nimport { mapDispatchers } from '../../utils/internal/redux-utils';\nimport DetailsComponent from './component';\nimport detailsConnector from './selectors';\nimport { loadEpisodes } from '../../global/episodes/actions';\nimport { EPISODE_PAGE, DETAILS_PAGE } from '../../router/constants';\nimport browserHistory from '../../router/history';\nimport Loader from '../../components/Loader';\n\nconst dispatchers = mapDispatchers({\n  loadEpisodes,\n});\n\nexport default compose(\n  mapProps(({ ...props }) => ({\n    ...props,\n    isEpisode: !!props.match.params.episodeId,\n  })),\n  connect(\n    detailsConnector,\n    dispatchers\n  ),\n  withHandlers({\n    onClickEpisode: ({ match }) => ({ id: episodeId }) => {\n      const { id } = match.params;\n      browserHistory.push(`${DETAILS_PAGE}/${id}${EPISODE_PAGE}/${episodeId}`);\n    },\n  }),\n  lifecycle({\n    // TODO don't fetch two times the episodes if you already have them\n    componentDidMount() {\n      if (this.props.match.params.id) {\n        this.props.loadEpisodes(this.props.match.params.id);\n      }\n    },\n  }),\n  branch(\n    ({ isEpisodesLoading, isShowsLoading, item }) => isEpisodesLoading || isShowsLoading || !item,\n    renderComponent(Loader),\n    renderComponent(DetailsComponent)\n  )\n)();\n"],"sourceRoot":""}